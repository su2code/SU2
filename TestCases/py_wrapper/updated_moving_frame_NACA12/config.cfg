% PROBLEM DEFINITION
%
SOLVER= EULER
REF_DIMENSIONALIZATION= FREESTREAM_VEL_EQ_MACH
MATH_PROBLEM= DIRECT
RESTART_SOL= NO

% FREE-STREAM DEFINITION
%
% We are translating the domain instead of having farfield velocity.
% Note: The rotating frame is intended for 3D cases. To use the feature in a 2D case,
% care must be taken with respect to the axes, e.g. to obtain a pitching motion, a 
% rotation about the z-axis can be used.
GRID_MOVEMENT= ROTATING_FRAME
MOTION_ORIGIN= 0.0, 0.0, 0.0
ROTATION_RATE=  0.0, 0.0, 0.0
TRANSLATION_RATE= -265.05707641411146, 0.0, 0.0
MACH_NUMBER= 0.0
FREESTREAM_PRESSURE= 101325.0
FREESTREAM_TEMPERATURE= 273.15

% REFERENCE VALUES
%
% The AOA is only needed to compute CD and CL, it should match the translation rate.
AOA= 0.0
% Same for the Mach number of the motion.
MACH_MOTION= 0.8
REF_ORIGIN_MOMENT_X= 0.00
REF_ORIGIN_MOMENT_Y= 0.00
REF_ORIGIN_MOMENT_Z= 0.00
REF_LENGTH= 1.0
REF_AREA= 1.0

% BOUNDARY CONDITIONS
%
MARKER_EULER= ( airfoil )
MARKER_FAR= ( farfield )
MARKER_PLOTTING= ( airfoil )
MARKER_MONITORING= ( airfoil )
% We are specifying this marker to have an easy way to access it in python.
MARKER_DEFORM_MESH= ( airfoil )

% DISCRETIZATION METHODS
%
CONV_NUM_METHOD_FLOW= ROE
MUSCL_FLOW= YES
NUM_METHOD_GRAD= WEIGHTED_LEAST_SQUARES
SLOPE_LIMITER_FLOW= VENKATAKRISHNAN_WANG
VENKAT_LIMITER_COEFF= 0.1

% SOLUTION ACCELERATION
%
CFL_NUMBER= 1e3
CFL_ADAPT= NO
%
MGLEVEL= 3
MGCYCLE= V_CYCLE
MG_PRE_SMOOTH= ( 1, 2, 3, 3 )
MG_POST_SMOOTH= ( 0, 0, 0, 0 )
MG_CORRECTION_SMOOTH= ( 0, 0, 0, 0 )
MG_DAMP_RESTRICTION= 0.7
MG_DAMP_PROLONGATION= 0.7
%
LINEAR_SOLVER= FGMRES
LINEAR_SOLVER_PREC= ILU
LINEAR_SOLVER_ERROR= 0.1
LINEAR_SOLVER_ITER= 10

% CONVERGENCE PARAMETERS
%
ITER= 250
CONV_FIELD= RMS_DENSITY
CONV_RESIDUAL_MINVAL= -9

% INPUT/OUTPUT
%
MESH_FILENAME= ../../euler/naca0012/mesh_NACA0012_inv.su2
MESH_FORMAT= SU2
SCREEN_OUTPUT= (INNER_ITER, RMS_RES, FORCE_X, FORCE_Y, FORCE_Z, MOMENT_X, MOMENT_Y, MOMENT_Z)
HISTORY_OUTPUT= (INNER_ITER, RMS_RES, AERO_COEFF)
