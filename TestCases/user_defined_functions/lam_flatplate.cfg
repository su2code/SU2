%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                                                              %
% SU2 configuration file                                                       %
% Case description: Test custom outputs and objective function.                %
% Author: P. Gomes                                                             %
% Date: 5th Jan 2022                                                           %
% File Version 8.2.0 "Harrier"                                                 %
%                                                                              %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
SOLVER= NAVIER_STOKES
KIND_TURB_MODEL= NONE
RESTART_SOL= NO
%
% User defined expressions of solver variables and other history outputs.
% The syntax to define a custom output is 'name : type{expression}[markers]'.
% NOTE: To obtain the list of available solver variables write an invalid
% expression (e.g. 'x : AreaAvg{INVALID}[]') and run SU2.
% Different outputs need to be separated by ";". The available types are:
% - Macro: Introduces a new field that can only be used in other expressions,
%   it is not an output by itself (note the "$" symbol to reference macros).
% - Function: Introduces a new scalar output that is a function of other scalar
%   outputs, it cannot reference fields (e.g. velocity).
% - AreaAvg and AreaInt: Computes an area average or integral of a field (the
%   expression) over the list of markers.
% - MassFlowAvg and MassFlowInt: Computes a mass flow average or integral.
% - Probe: Evaluates the expression using the values of the mesh point closest
%   to the coordinates specified inside "[]", [x, y] or [x, y, z] (2 or 3D).
% NOTE: Each custom output can only use one type, e.g. it is not possible to
% write 'p_drop : AreaAvg{PRESSURE}[inlet] - AreaAvg{PRESSURE}[outlet]'. This
% would need to be separated into two AreaAvg outputs and one Function to
% compute their difference.
CUSTOM_OUTPUTS= 'velocity : Macro{sqrt(pow(VELOCITY_X, 2) + pow(VELOCITY_Y, 2) + pow(VELOCITY_Z, 2))};\
                 avg_vel : AreaAvg{$velocity}[z_minus, z_plus];\
                 var_vel : AreaAvg{pow($velocity - avg_vel, 2)}[z_minus, z_plus];\
                 dev_vel : Function{sqrt(var_vel) / avg_vel};\
                 probe1 : Probe{$velocity}[0.005, 0.005, 0.05]'
%
% "COMBO" is the name and group of the output for the objective function
% (regardless of definition). "CUSTOM" is the group for all custom outputs.
SCREEN_OUTPUT= INNER_ITER, RMS_DENSITY, RMS_ENERGY, LINSOL_RESIDUAL, FORCE_Z,\
               SURFACE_MASSFLOW, SURFACE_TOTAL_TEMPERATURE, avg_vel, dev_vel, probe1, COMBO
HISTORY_OUTPUT = ITER, AERO_COEFF, FLOW_COEFF, FLOW_COEFF_SURF, CUSTOM, COMBO
OBJECTIVE_FUNCTION= CUSTOM_OBJFUNC
% Here we define how the custom objective is computed from other outputs. For 
% example, force in the z direction (computed for all MARKER_MONITORING and part
% of AERO_COEFF) plus the absolute value of massflow across the second surface
% ([1]) in MARKER_ANALYZE, scaled by a factor of 1000. It is also possible to
% use "per surface" values from MARKER_MONITORING (use the dry-run mode to see
% the names of available outputs, e.g. SU2_CFD -d lam_flatplate.cfg).
% For multizone problems the CUSTOM_OBJFUNC should be defined for each zone
% individually (with the outputs of that zone), the total for the problem is
% the sum over zones, see disc_adj_fsi/Airfoil_2d.
CUSTOM_OBJFUNC= '1e3 * (FORCE_Z + fabs(SURFACE_MASSFLOW[1])) + dev_vel'

% -------------------- COMPRESSIBLE FREE-STREAM DEFINITION --------------------%
%
MACH_NUMBER= 0.1
INIT_OPTION= TD_CONDITIONS
FREESTREAM_OPTION= TEMPERATURE_FS
FREESTREAM_TEMPERATURE= 297.62
REYNOLDS_NUMBER= 600
REYNOLDS_LENGTH= 0.02

% ---------------------- REFERENCE VALUE DEFINITION ---------------------------%
%
REF_ORIGIN_MOMENT_X = 0.00
REF_ORIGIN_MOMENT_Y = 0.00
REF_ORIGIN_MOMENT_Z = 0.00
REF_LENGTH= 0.02
REF_AREA= 0.02
%
FLUID_MODEL= IDEAL_GAS
GAMMA_VALUE= 1.4
GAS_CONSTANT= 287.87
VISCOSITY_MODEL= CONSTANT_VISCOSITY
MU_CONSTANT= 0.001

% -------------------- BOUNDARY CONDITION DEFINITION --------------------------%
%
MARKER_HEATFLUX= ( y_minus, 0.0 )
%
MARKER_SYM= ( y_plus )
MARKER_PERIODIC= ( x_minus, x_plus, 0,0,0, 0,0,0, 0.01,0,0 )
%
MARKER_INLET= ( z_minus, 300.0, 100000.0, 0.0, 0.0, 1.0 )
MARKER_OUTLET= ( z_plus, 99000.0 )
%
MARKER_PLOTTING= ( y_minus )
MARKER_MONITORING= ( y_minus )
MARKER_ANALYZE= ( z_minus, z_plus )

% ------------- COMMON PARAMETERS DEFINING THE NUMERICAL METHOD ---------------%
%
NUM_METHOD_GRAD= GREEN_GAUSS
CFL_NUMBER= 1e4
CFL_ADAPT= NO
TIME_DISCRE_FLOW= EULER_IMPLICIT

% ------------------------ LINEAR SOLVER DEFINITION ---------------------------%
%
LINEAR_SOLVER= FGMRES
LINEAR_SOLVER_PREC= ILU
LINEAR_SOLVER_ERROR= 0.2
LINEAR_SOLVER_ITER= 5

% -------------------- FLOW NUMERICAL METHOD DEFINITION -----------------------%
%
CONV_NUM_METHOD_FLOW= ROE
MUSCL_FLOW= YES
SLOPE_LIMITER_FLOW= NONE

% --------------------------- CONVERGENCE PARAMETERS --------------------------%
%
CONV_RESIDUAL_MINVAL= -11
CONV_STARTITER= 0
INNER_ITER= 21

% ------------------------- INPUT/OUTPUT INFORMATION --------------------------%
%
MESH_FORMAT= BOX
MESH_BOX_LENGTH= (0.01, 0.01, 0.1)
MESH_BOX_SIZE= (9, 17, 65)

